name: Integration tests

on:
  workflow_dispatch:
    inputs:
      working-directory:
        required: true
        type: string

env:
  POETRY_VERSION: "1.7.1"

jobs:
  build:
    environment: Scheduled testing
    defaults:
      run:
        working-directory: ${{ inputs.working-directory }}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version:
          - "3.8"
          - "3.11"
    name: Python ${{ matrix.python-version }}
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }} + Poetry ${{ env.POETRY_VERSION }}
        uses: "./.github/actions/poetry_setup"
        with:
          python-version: ${{ matrix.python-version }}
          poetry-version: ${{ env.POETRY_VERSION }}
          working-directory: ${{ inputs.working-directory }}
          cache-key: core

      - name: Install dependencies
        shell: bash
        run: poetry install --with test,test_integration

      - name: Install deps outside pyproject
        if: ${{ startsWith(inputs.working-directory, 'libs/community/') }}
        shell: bash
        run: poetry run pip install "boto3<2" "google-cloud-aiplatform<2"

      - name: 'Authenticate to Google Cloud'
        id: 'auth'
        uses: google-github-actions/auth@v2
        with:
          credentials_json: '{
  "type": "service_account",
  "project_id": "dazzling-pillar-417702",
  "private_key_id": "f568710e9f865e24e241ee3956cb98a742d0b0d5",
  "private_key": "-----BEGIN PRIVATE KEY-----\nMIIEvgIBADANBgkqhkiG9w0BAQEFAASCBKgwggSkAgEAAoIBAQDR55w26SvqAKih\nEmmIBXaPC1UIxlQ99Lbcow5zBUTbPvHcQuSUbd9erFOF/tcMDdRQzh6LUp8HLk/F\n/Lj36ODCoLVLOoDm5W183khi/eiVCerBo4xdl6Pl46DJ+hU9w4MGjR4viW3dbXyH\nLn0i18xEPpEzjmtYkskgZscNccUZZl0ZS6tBCU0fLEt7383Ovwt/1edrSVtpREm/\nh9W9WuOGKBZjnojfBO8CfigHyhO5PLXUohDoyrjC4Pey+NL6OQe3WldjAs3tPBhJ\nFlXQhWp0+TBxKFQW6nXxcFYCM7hma/FFB7Zux1KNvA1zqWgPpIAfuAfxz1u6c+WO\n3+aHwDw7AgMBAAECggEAP+X4XZTs297YdrQisRgsp84E1Fd/xJ6O3iq7FtOnSvDl\n8q3gZLjv0yO1h2h1MYOyOukMTlBX/fkgqr5M1pcreMQwfFayb9eu1WDbe1sdJuWu\nc8UkUUd8ytpZE7NQLQ2sAN4Lrt/wtIQEcSh7SpST58B+NkooLn38wSLYfKTCIgFE\nfw3dLzaYTbTyYuJ9y5TUo1Hbf24rhftOD4yr7RJm+F+eedizSbd4gKB2KlAHaIHo\nCf/fa1NM5N7hBicbCdoZ+0BrFJSkiKV+6tUXHLQaEjfDSZTn6SfbXxMg+2ivvvHP\nPI+14VTzHyuvwcj5v82MppQcS8GrrZheFn/w3xr5DQKBgQD1flXaacr80qOgLQZD\n5hVxYVUtjqn/K4exelT2wP43+/m2f1MIY9e1OIC4Zp+Y3C1++H6rjVNKU8uZ+8QI\ntqyySNehMbtqt+h2bRrZFXhXOR5QoD7Bs9EE09ZIjNw7EvaC/2lfTfKDVmVtUfdI\nzhXzEh7Z8LHxua73dMu/dc1kBQKBgQDa41vZ0nDVA5NgRsYTuJLppF0iEJhrPvbe\npDvxgwBdQY8E1oseuTVe//ec9Ef6MU1j1iCyJXsCNWuipb83dnGMr+cLnRARf5Vt\nISBPBSohDlEzyF0sWSHQcZKilQi2oYbDnh0JFBq3qxicTTzE0HQx9XVeLS35a4+c\nnZC84VtTPwKBgQDDEvHLzhcz0XmeNUjuOW2+m7ZgriXdk0yPNgM/1NntyLeEUia7\n2wK0iUKXxUx63jL02ydk0Ldnr7BxGsOKnQYb4ZAfEfK4eY0qVcZozAvFW6kALmXP\n7EBikqaLHgt+kbH7JFQqHDliLgwI04Ipg0Gj1jlXu1DbIU6sak3hRQ3BtQKBgHsq\nhguqY30pVutMx7ZfHKPFrfY2Gl32fxlGlshOK41OD3jsdDnkg4iiRaWWu02oImD0\nI0+60V2ry5Yo59EAn+JHNJ4PUfRWszFF+5UbVdpl4QFfVDZZLTLKRXWgoNeLSnaW\naMYr/uCssNt6hqBEn61g7hsBFyaLBLNe4gu2TxonAoGBAJv9FFBQQERHjWfN8M3W\n5t5fdvelRRBscGpXtx5Tw8OS6Xf9AV1DHLqKZ5LF7q7kBFn2SOyY4EXD0fGh/+kP\nXFR8KRdiXunMAkHne7HF0begPDClHv36k36fh5kgRx2PHGVptypDy+iMDaD/FmKE\nKJHCrJswpFqrd65smRF19AII\n-----END PRIVATE KEY-----\n",
  "client_email": "ligang-super-langchain@dazzling-pillar-417702.iam.gserviceaccount.com",
  "client_id": "116759949305310663798",
  "auth_uri": "https://accounts.google.com/o/oauth2/auth",
  "token_uri": "https://oauth2.googleapis.com/token",
  "auth_provider_x509_cert_url": "https://www.googleapis.com/oauth2/v1/certs",
  "client_x509_cert_url": "https://www.googleapis.com/robot/v1/metadata/x509/ligang-super-langchain%40dazzling-pillar-417702.iam.gserviceaccount.com",
  "universe_domain": "googleapis.com"
}
'

      - name: Run integration tests
        shell: bash
        env:
          AI21_API_KEY: ${{ secrets.AI21_API_KEY }}
          GOOGLE_API_KEY: ${{ secrets.GOOGLE_API_KEY }}
          ANTHROPIC_API_KEY: ${{ secrets.ANTHROPIC_API_KEY }}
          MISTRAL_API_KEY: ${{ secrets.MISTRAL_API_KEY }}
          TOGETHER_API_KEY: ${{ secrets.TOGETHER_API_KEY }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          NVIDIA_API_KEY: ${{ secrets.NVIDIA_API_KEY }}
          GOOGLE_SEARCH_API_KEY: ${{ secrets.GOOGLE_SEARCH_API_KEY }}
          GOOGLE_CSE_ID: ${{ secrets.GOOGLE_CSE_ID }}
          EXA_API_KEY: ${{ secrets.EXA_API_KEY }}
          NOMIC_API_KEY: ${{ secrets.NOMIC_API_KEY }}
          WATSONX_APIKEY: ${{ secrets.WATSONX_APIKEY }}
          WATSONX_PROJECT_ID: ${{ secrets.WATSONX_PROJECT_ID }}
          PINECONE_API_KEY: ${{ secrets.PINECONE_API_KEY }}
          PINECONE_ENVIRONMENT: ${{ secrets.PINECONE_ENVIRONMENT }}
          ASTRA_DB_API_ENDPOINT: ${{ secrets.ASTRA_DB_API_ENDPOINT }}
          ASTRA_DB_APPLICATION_TOKEN: ${{ secrets.ASTRA_DB_APPLICATION_TOKEN }}
          ASTRA_DB_KEYSPACE: ${{ secrets.ASTRA_DB_KEYSPACE }}
          ES_URL: ${{ secrets.ES_URL }}
          ES_CLOUD_ID: ${{ secrets.ES_CLOUD_ID }}
          ES_API_KEY: ${{ secrets.ES_API_KEY }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # for airbyte
          MONGODB_ATLAS_URI: ${{ secrets.MONGODB_ATLAS_URI }}
          VOYAGE_API_KEY: ${{ secrets.VOYAGE_API_KEY }}
        run: |
          make integration_tests

      - name: Ensure the tests did not create any additional files
        shell: bash
        run: |
          set -eu

          STATUS="$(git status)"
          echo "$STATUS"

          # grep will exit non-zero if the target message isn't found,
          # and `set -e` above will cause the step to fail.
          echo "$STATUS" | grep 'nothing to commit, working tree clean'
