{
  "pluginId": "default",
  "version": "current",
  "label": "Next",
  "banner": null,
  "badge": false,
  "noIndex": false,
  "className": "docs-version-current",
  "isLast": true,
  "docsSidebars": {
    "sidebar": [
      {
        "type": "link",
        "label": "Welcome to LangChain",
        "href": "/docs/",
        "docId": "index"
      },
      {
        "type": "category",
        "label": "Getting Started",
        "collapsed": false,
        "collapsible": false,
        "items": [
          {
            "type": "link",
            "label": "Installation",
            "href": "/docs/getting_started/installation",
            "docId": "getting_started/installation"
          }
        ]
      },
      {
        "type": "category",
        "label": "Components",
        "collapsed": false,
        "collapsible": false,
        "items": [
          {
            "type": "category",
            "label": "agents",
            "collapsible": true,
            "collapsed": true,
            "items": [
              {
                "type": "category",
                "label": "agents",
                "collapsible": true,
                "collapsed": true,
                "items": [
                  {
                    "type": "link",
                    "label": "Agent Types",
                    "href": "/docs/modules/agents/agents/agent_types",
                    "docId": "modules/agents/agents/agent_types"
                  }
                ]
              },
              {
                "type": "category",
                "label": "tools",
                "collapsible": true,
                "collapsed": true,
                "items": [
                  {
                    "type": "link",
                    "label": "Getting Started",
                    "href": "/docs/modules/agents/tools/getting_started",
                    "docId": "modules/agents/tools/getting_started"
                  }
                ]
              }
            ]
          },
          {
            "type": "link",
            "label": "Data I/O",
            "href": "/docs/modules/data_io",
            "docId": "modules/data_io"
          },
          {
            "type": "category",
            "label": "model_io",
            "collapsible": true,
            "collapsed": true,
            "items": [
              {
                "type": "category",
                "label": "prompts",
                "collapsible": true,
                "collapsed": true,
                "items": [
                  {
                    "type": "category",
                    "label": "example_selectors",
                    "collapsible": true,
                    "collapsed": true,
                    "items": [
                      {
                        "type": "category",
                        "label": "examples",
                        "collapsible": true,
                        "collapsed": true,
                        "items": [
                          {
                            "type": "link",
                            "label": "How to create a custom example selector",
                            "href": "/docs/modules/model_io/prompts/example_selectors/examples/custom_example_selector",
                            "docId": "modules/model_io/prompts/example_selectors/examples/custom_example_selector"
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "type": "category",
                    "label": "prompt_templates",
                    "collapsible": true,
                    "collapsed": true,
                    "items": [
                      {
                        "type": "link",
                        "label": "Getting Started",
                        "href": "/docs/modules/model_io/prompts/prompt_templates/getting_started",
                        "docId": "modules/model_io/prompts/prompt_templates/getting_started"
                      }
                    ]
                  }
                ]
              }
            ]
          },
          {
            "type": "link",
            "label": "Model I/O",
            "href": "/docs/modules/model_io",
            "docId": "modules/model_io"
          }
        ]
      },
      {
        "type": "category",
        "label": "Use Cases",
        "collapsed": false,
        "collapsible": false,
        "items": [
          {
            "type": "link",
            "label": "Agent Simulations",
            "href": "/docs/use_cases/agent_simulations",
            "docId": "use_cases/agent_simulations"
          },
          {
            "type": "link",
            "label": "Interacting with APIs",
            "href": "/docs/use_cases/apis",
            "docId": "use_cases/apis"
          },
          {
            "type": "link",
            "label": "Autonomous Agents",
            "href": "/docs/use_cases/autonomous_agents",
            "docId": "use_cases/autonomous_agents"
          },
          {
            "type": "link",
            "label": "Chatbots",
            "href": "/docs/use_cases/chatbots",
            "docId": "use_cases/chatbots"
          },
          {
            "type": "link",
            "label": "Code Understanding",
            "href": "/docs/use_cases/code",
            "docId": "use_cases/code"
          },
          {
            "type": "link",
            "label": "Extraction",
            "href": "/docs/use_cases/extraction",
            "docId": "use_cases/extraction"
          },
          {
            "type": "link",
            "label": "Agents",
            "href": "/docs/use_cases/personal_assistants",
            "docId": "use_cases/personal_assistants"
          },
          {
            "type": "link",
            "label": "Question Answering over Docs",
            "href": "/docs/use_cases/question_answering",
            "docId": "use_cases/question_answering"
          },
          {
            "type": "link",
            "label": "Summarization",
            "href": "/docs/use_cases/summarization",
            "docId": "use_cases/summarization"
          },
          {
            "type": "link",
            "label": "Querying Tabular Data",
            "href": "/docs/use_cases/tabular",
            "docId": "use_cases/tabular"
          }
        ]
      },
      {
        "type": "category",
        "label": "Ecosystem",
        "items": [
          {
            "type": "link",
            "label": "Deployments",
            "href": "/docs/ecosystem/deployments",
            "docId": "ecosystem/deployments"
          },
          {
            "type": "link",
            "label": "ModelScope",
            "href": "/docs/ecosystem/modelscope",
            "docId": "ecosystem/modelscope"
          }
        ],
        "collapsed": true,
        "collapsible": true
      },
      {
        "type": "category",
        "label": "API Reference",
        "items": [
          {
            "type": "link",
            "label": "Website",
            "href": "/docs/api/",
            "docId": "api/index"
          },
          {
            "type": "link",
            "label": "docs",
            "href": "/docs/api/API",
            "docId": "api/API"
          }
        ],
        "collapsed": true,
        "collapsible": true,
        "href": "/docs/api/"
      }
    ]
  },
  "docs": {
    "additional_resources/tracing": {
      "id": "additional_resources/tracing",
      "title": "Tracing",
      "description": "By enabling tracing in your LangChain runs, youâ€™ll be able to more effectively visualize, step through, and debug your chains and agents."
    },
    "additional_resources/youtube": {
      "id": "additional_resources/youtube",
      "title": "YouTube",
      "description": "This is a collection of LangChain videos on YouTube."
    },
    "api/API": {
      "id": "api/API",
      "title": "docs",
      "description": "Packages",
      "sidebar": "sidebar"
    },
    "api/index": {
      "id": "api/index",
      "title": "Website",
      "description": "This website is built using Docusaurus 2, a modern static website generator.",
      "sidebar": "sidebar"
    },
    "dependents": {
      "id": "dependents",
      "title": "Dependents",
      "description": "Dependents stats for hwchase17/langchain"
    },
    "ecosystem/deployments": {
      "id": "ecosystem/deployments",
      "title": "Deployments",
      "description": "So, you've created a really cool chain - now what? How do you deploy it and make it easily shareable with the world?",
      "sidebar": "sidebar"
    },
    "ecosystem/modelscope": {
      "id": "ecosystem/modelscope",
      "title": "ModelScope",
      "description": "This page covers how to use the modelscope ecosystem within LangChain.",
      "sidebar": "sidebar"
    },
    "get_started/quickstart": {
      "id": "get_started/quickstart",
      "title": "Quickstart guide",
      "description": "Installation"
    },
    "getting_started/installation": {
      "id": "getting_started/installation",
      "title": "Installation",
      "description": "Official release",
      "sidebar": "sidebar"
    },
    "index": {
      "id": "index",
      "title": "Welcome to LangChain",
      "description": "LangChain is a framework for developing applications powered by language models. It enables applications that are",
      "sidebar": "sidebar"
    },
    "integrations/ai21": {
      "id": "integrations/ai21",
      "title": "AI21 Labs",
      "description": "This page covers how to use the AI21 ecosystem within LangChain."
    },
    "integrations/airbyte": {
      "id": "integrations/airbyte",
      "title": "Airbyte",
      "description": "Airbyte is a data integration platform for ELT pipelines from APIs,"
    },
    "integrations/aleph_alpha": {
      "id": "integrations/aleph_alpha",
      "title": "Aleph Alpha",
      "description": "Aleph Alpha was founded in 2019 with the mission to research and build the foundational technology for an era of strong AI. The team of international scientists, engineers, and innovators researches, develops, and deploys transformative AI like large language and multimodal models and runs the fastest European commercial AI cluster."
    },
    "integrations/analyticdb": {
      "id": "integrations/analyticdb",
      "title": "AnalyticDB",
      "description": "This page covers how to use the AnalyticDB ecosystem within LangChain."
    },
    "integrations/annoy": {
      "id": "integrations/annoy",
      "title": "Annoy",
      "description": "Annoy (Approximate Nearest Neighbors Oh Yeah) is a C++ library with Python bindings to search for points in space that are close to a given query point. It also creates large read-only file-based data structures that are mmapped into memory so that many processes may share the same data."
    },
    "integrations/anyscale": {
      "id": "integrations/anyscale",
      "title": "Anyscale",
      "description": "This page covers how to use the Anyscale ecosystem within LangChain."
    },
    "integrations/apify": {
      "id": "integrations/apify",
      "title": "Apify",
      "description": "This page covers how to use Apify within LangChain."
    },
    "integrations/argilla": {
      "id": "integrations/argilla",
      "title": "Argilla",
      "description": "Argilla - Open-source data platform for LLMs"
    },
    "integrations/arxiv": {
      "id": "integrations/arxiv",
      "title": "Arxiv",
      "description": "arXiv is an open-access archive for 2 million scholarly articles in the fields of physics,"
    },
    "integrations/atlas": {
      "id": "integrations/atlas",
      "title": "AtlasDB",
      "description": "This page covers how to use Nomic's Atlas ecosystem within LangChain."
    },
    "integrations/aws_s3": {
      "id": "integrations/aws_s3",
      "title": "AWS S3 Directory",
      "description": "Amazon Simple Storage Service (Amazon S3) is an object storage service."
    },
    "integrations/azlyrics": {
      "id": "integrations/azlyrics",
      "title": "AZLyrics",
      "description": "AZLyrics is a large, legal, every day growing collection of lyrics."
    },
    "integrations/azure_blob_storage": {
      "id": "integrations/azure_blob_storage",
      "title": "Azure Blob Storage",
      "description": "Azure Blob Storage is Microsoft's object storage solution for the cloud. Blob Storage is optimized for storing massive amounts of unstructured data. Unstructured data is data that doesn't adhere to a particular data model or definition, such as text or binary data."
    },
    "integrations/azure_cognitive_search_": {
      "id": "integrations/azure_cognitive_search_",
      "title": "Azure Cognitive Search",
      "description": "Azure Cognitive Search (formerly known as Azure Search) is a cloud search service that gives developers infrastructure, APIs, and tools for building a rich search experience over private, heterogeneous content in web, mobile, and enterprise applications."
    },
    "integrations/azure_openai": {
      "id": "integrations/azure_openai",
      "title": "Azure OpenAI",
      "description": "Microsoft Azure, often referred to as Azure is a cloud computing platform run by Microsoft, which offers access, management, and development of applications and services through global data centers. It provides a range of capabilities, including software as a service (SaaS), platform as a service (PaaS), and infrastructure as a service (IaaS). Microsoft Azure supports many programming languages, tools, and frameworks, including Microsoft-specific and third-party software and systems."
    },
    "integrations/bananadev": {
      "id": "integrations/bananadev",
      "title": "Banana",
      "description": "This page covers how to use the Banana ecosystem within LangChain."
    },
    "integrations/beam": {
      "id": "integrations/beam",
      "title": "Beam",
      "description": "This page covers how to use Beam within LangChain."
    },
    "integrations/bedrock": {
      "id": "integrations/bedrock",
      "title": "Bedrock",
      "description": "Amazon Bedrock is a fully managed service that makes FMs from leading AI startups and Amazon available via an API, so you can choose from a wide range of FMs to find the model that is best suited for your use case."
    },
    "integrations/bilibili": {
      "id": "integrations/bilibili",
      "title": "BiliBili",
      "description": "Bilibili is one of the most beloved long-form video sites in China."
    },
    "integrations/blackboard": {
      "id": "integrations/blackboard",
      "title": "Blackboard",
      "description": "Blackboard Learn (previously the Blackboard Learning Management System)"
    },
    "integrations/cassandra": {
      "id": "integrations/cassandra",
      "title": "Cassandra",
      "description": "Cassandra is a free and open-source, distributed, wide-column"
    },
    "integrations/cerebriumai": {
      "id": "integrations/cerebriumai",
      "title": "CerebriumAI",
      "description": "This page covers how to use the CerebriumAI ecosystem within LangChain."
    },
    "integrations/chroma": {
      "id": "integrations/chroma",
      "title": "Chroma",
      "description": "Chroma is a database for building AI applications with embeddings."
    },
    "integrations/cohere": {
      "id": "integrations/cohere",
      "title": "Cohere",
      "description": "Cohere is a Canadian startup that provides natural language processing models"
    },
    "integrations/college_confidential": {
      "id": "integrations/college_confidential",
      "title": "College Confidential",
      "description": "College Confidential gives information on 3,800+ colleges and universities."
    },
    "integrations/confluence": {
      "id": "integrations/confluence",
      "title": "Confluence",
      "description": "Confluence is a wiki collaboration platform that saves and organizes all of the project-related material. Confluence is a knowledge base that primarily handles content management activities."
    },
    "integrations/ctransformers": {
      "id": "integrations/ctransformers",
      "title": "C Transformers",
      "description": "This page covers how to use the C Transformers library within LangChain."
    },
    "integrations/databerry": {
      "id": "integrations/databerry",
      "title": "Databerry",
      "description": "Databerry is an open source document retrieval platform that helps to connect your personal data with Large Language Models."
    },
    "integrations/deepinfra": {
      "id": "integrations/deepinfra",
      "title": "DeepInfra",
      "description": "This page covers how to use the DeepInfra ecosystem within LangChain."
    },
    "integrations/deeplake": {
      "id": "integrations/deeplake",
      "title": "Deep Lake",
      "description": "This page covers how to use the Deep Lake ecosystem within LangChain."
    },
    "integrations/diffbot": {
      "id": "integrations/diffbot",
      "title": "Diffbot",
      "description": "Diffbot is a service to read web pages. Unlike traditional web scraping tools,"
    },
    "integrations/discord": {
      "id": "integrations/discord",
      "title": "Discord",
      "description": "Discord is a VoIP and instant messaging social platform. Users have the ability to communicate"
    },
    "integrations/docugami": {
      "id": "integrations/docugami",
      "title": "Docugami",
      "description": "Docugami converts business documents into a Document XML Knowledge Graph, generating forests"
    },
    "integrations/duckdb": {
      "id": "integrations/duckdb",
      "title": "DuckDB",
      "description": "DuckDB is an in-process SQL OLAP database management system."
    },
    "integrations/elasticsearch": {
      "id": "integrations/elasticsearch",
      "title": "Elasticsearch",
      "description": "Elasticsearch is a distributed, RESTful search and analytics engine."
    },
    "integrations/evernote": {
      "id": "integrations/evernote",
      "title": "EverNote",
      "description": "EverNote is intended for archiving and creating notes in which photos, audio and saved web content can be embedded. Notes are stored in virtual \"notebooks\" and can be tagged, annotated, edited, searched, and exported."
    },
    "integrations/facebook_chat": {
      "id": "integrations/facebook_chat",
      "title": "Facebook Chat",
      "description": "Messenger) is an American proprietary instant messaging app and"
    },
    "integrations/figma": {
      "id": "integrations/figma",
      "title": "Figma",
      "description": "Figma is a collaborative web application for interface design."
    },
    "integrations/forefrontai": {
      "id": "integrations/forefrontai",
      "title": "ForefrontAI",
      "description": "This page covers how to use the ForefrontAI ecosystem within LangChain."
    },
    "integrations/git": {
      "id": "integrations/git",
      "title": "Git",
      "description": "Git is a distributed version control system that tracks changes in any set of computer files, usually used for coordinating work among programmers collaboratively developing source code during software development."
    },
    "integrations/gitbook": {
      "id": "integrations/gitbook",
      "title": "GitBook",
      "description": "GitBook is a modern documentation platform where teams can document everything from products to internal knowledge bases and APIs."
    },
    "integrations/google_bigquery": {
      "id": "integrations/google_bigquery",
      "title": "Google BigQuery",
      "description": "Google BigQuery is a serverless and cost-effective enterprise data warehouse that works across clouds and scales with your data."
    },
    "integrations/google_cloud_storage": {
      "id": "integrations/google_cloud_storage",
      "title": "Google Cloud Storage",
      "description": "Google Cloud Storage is a managed service for storing unstructured data."
    },
    "integrations/google_drive": {
      "id": "integrations/google_drive",
      "title": "Google Drive",
      "description": "Google Drive is a file storage and synchronization service developed by Google."
    },
    "integrations/google_search": {
      "id": "integrations/google_search",
      "title": "Google Search",
      "description": "This page covers how to use the Google Search API within LangChain."
    },
    "integrations/google_serper": {
      "id": "integrations/google_serper",
      "title": "Google Serper",
      "description": "This page covers how to use the Serper Google Search API within LangChain. Serper is a low-cost Google Search API that can be used to add answer box, knowledge graph, and organic results data from Google Search."
    },
    "integrations/gooseai": {
      "id": "integrations/gooseai",
      "title": "GooseAI",
      "description": "This page covers how to use the GooseAI ecosystem within LangChain."
    },
    "integrations/gpt4all": {
      "id": "integrations/gpt4all",
      "title": "GPT4All",
      "description": "This page covers how to use the GPT4All wrapper within LangChain. The tutorial is divided into two parts: installation and setup, followed by usage with an example."
    },
    "integrations/graphsignal": {
      "id": "integrations/graphsignal",
      "title": "Graphsignal",
      "description": "This page covers how to use Graphsignal to trace and monitor LangChain. Graphsignal enables full visibility into your application. It provides latency breakdowns by chains and tools, exceptions with full context, data monitoring, compute/GPU utilization, OpenAI cost analytics, and more."
    },
    "integrations/gutenberg": {
      "id": "integrations/gutenberg",
      "title": "Gutenberg",
      "description": "Project Gutenberg is an online library of free eBooks."
    },
    "integrations/hacker_news": {
      "id": "integrations/hacker_news",
      "title": "Hacker News",
      "description": "Hacker News (sometimes abbreviated as HN) is a social news"
    },
    "integrations/hazy_research": {
      "id": "integrations/hazy_research",
      "title": "Hazy Research",
      "description": "This page covers how to use the Hazy Research ecosystem within LangChain."
    },
    "integrations/helicone": {
      "id": "integrations/helicone",
      "title": "Helicone",
      "description": "This page covers how to use the Helicone ecosystem within LangChain."
    },
    "integrations/huggingface": {
      "id": "integrations/huggingface",
      "title": "Hugging Face",
      "description": "This page covers how to use the Hugging Face ecosystem (including the Hugging Face Hub) within LangChain."
    },
    "integrations/ifixit": {
      "id": "integrations/ifixit",
      "title": "iFixit",
      "description": "iFixit is the largest, open repair community on the web. The site contains nearly 100k"
    },
    "integrations/imsdb": {
      "id": "integrations/imsdb",
      "title": "IMSDb",
      "description": "IMSDb is the Internet Movie Script Database."
    },
    "integrations/jina": {
      "id": "integrations/jina",
      "title": "Jina",
      "description": "This page covers how to use the Jina ecosystem within LangChain."
    },
    "integrations/lancedb": {
      "id": "integrations/lancedb",
      "title": "LanceDB",
      "description": "This page covers how to use LanceDB within LangChain."
    },
    "integrations/llamacpp": {
      "id": "integrations/llamacpp",
      "title": "Llama.cpp",
      "description": "This page covers how to use llama.cpp within LangChain."
    },
    "integrations/mediawikidump": {
      "id": "integrations/mediawikidump",
      "title": "MediaWikiDump",
      "description": "MediaWiki XML Dumps contain the content of a wiki"
    },
    "integrations/metal": {
      "id": "integrations/metal",
      "title": "Metal",
      "description": "This page covers how to use Metal within LangChain."
    },
    "integrations/microsoft_onedrive": {
      "id": "integrations/microsoft_onedrive",
      "title": "Microsoft OneDrive",
      "description": "Microsoft OneDrive (formerly SkyDrive) is a file-hosting service operated by Microsoft."
    },
    "integrations/microsoft_powerpoint": {
      "id": "integrations/microsoft_powerpoint",
      "title": "Microsoft PowerPoint",
      "description": "Microsoft PowerPoint is a presentation program by Microsoft."
    },
    "integrations/microsoft_word": {
      "id": "integrations/microsoft_word",
      "title": "Microsoft Word",
      "description": "Microsoft Word is a word processor developed by Microsoft."
    },
    "integrations/milvus": {
      "id": "integrations/milvus",
      "title": "Milvus",
      "description": "This page covers how to use the Milvus ecosystem within LangChain."
    },
    "integrations/modal": {
      "id": "integrations/modal",
      "title": "Modal",
      "description": "This page covers how to use the Modal ecosystem within LangChain."
    },
    "integrations/modern_treasury": {
      "id": "integrations/modern_treasury",
      "title": "Modern Treasury",
      "description": "Modern Treasury simplifies complex payment operations. It is a unified platform to power products and processes that move money."
    },
    "integrations/momento": {
      "id": "integrations/momento",
      "title": "Momento",
      "description": "Momento Cache is the world's first truly serverless caching service. It provides instant elasticity, scale-to-zero"
    },
    "integrations/myscale": {
      "id": "integrations/myscale",
      "title": "MyScale",
      "description": "This page covers how to use MyScale vector database within LangChain."
    },
    "integrations/nlpcloud": {
      "id": "integrations/nlpcloud",
      "title": "NLPCloud",
      "description": "This page covers how to use the NLPCloud ecosystem within LangChain."
    },
    "integrations/notion": {
      "id": "integrations/notion",
      "title": "Notion DB",
      "description": "Notion is a collaboration platform with modified Markdown support that integrates kanban"
    },
    "integrations/obsidian": {
      "id": "integrations/obsidian",
      "title": "Obsidian",
      "description": "Obsidian is a powerful and extensible knowledge base"
    },
    "integrations/openai": {
      "id": "integrations/openai",
      "title": "OpenAI",
      "description": "OpenAI is American artificial intelligence (AI) research laboratory"
    },
    "integrations/opensearch": {
      "id": "integrations/opensearch",
      "title": "OpenSearch",
      "description": "This page covers how to use the OpenSearch ecosystem within LangChain."
    },
    "integrations/openweathermap": {
      "id": "integrations/openweathermap",
      "title": "OpenWeatherMap",
      "description": "OpenWeatherMap provides all essential weather data for a specific location:"
    },
    "integrations/petals": {
      "id": "integrations/petals",
      "title": "Petals",
      "description": "This page covers how to use the Petals ecosystem within LangChain."
    },
    "integrations/pgvector": {
      "id": "integrations/pgvector",
      "title": "PGVector",
      "description": "This page covers how to use the Postgres PGVector ecosystem within LangChain"
    },
    "integrations/pinecone": {
      "id": "integrations/pinecone",
      "title": "Pinecone",
      "description": "This page covers how to use the Pinecone ecosystem within LangChain."
    },
    "integrations/pipelineai": {
      "id": "integrations/pipelineai",
      "title": "PipelineAI",
      "description": "This page covers how to use the PipelineAI ecosystem within LangChain."
    },
    "integrations/predictionguard": {
      "id": "integrations/predictionguard",
      "title": "Prediction Guard",
      "description": "This page covers how to use the Prediction Guard ecosystem within LangChain."
    },
    "integrations/promptlayer": {
      "id": "integrations/promptlayer",
      "title": "PromptLayer",
      "description": "This page covers how to use PromptLayer within LangChain."
    },
    "integrations/psychic": {
      "id": "integrations/psychic",
      "title": "Psychic",
      "description": "Psychic is a platform for integrating with SaaS tools like Notion, Zendesk,"
    },
    "integrations/qdrant": {
      "id": "integrations/qdrant",
      "title": "Qdrant",
      "description": "This page covers how to use the Qdrant ecosystem within LangChain."
    },
    "integrations/reddit": {
      "id": "integrations/reddit",
      "title": "Reddit",
      "description": "Reddit is an American social news aggregation, content rating, and discussion website."
    },
    "integrations/redis": {
      "id": "integrations/redis",
      "title": "Redis",
      "description": "This page covers how to use the Redis ecosystem within LangChain."
    },
    "integrations/replicate": {
      "id": "integrations/replicate",
      "title": "Replicate",
      "description": "This page covers how to run models on Replicate within LangChain."
    },
    "integrations/roam": {
      "id": "integrations/roam",
      "title": "Roam",
      "description": "ROAM is a note-taking tool for networked thought, designed to create a personal knowledge base."
    },
    "integrations/runhouse": {
      "id": "integrations/runhouse",
      "title": "Runhouse",
      "description": "This page covers how to use the Runhouse ecosystem within LangChain."
    },
    "integrations/rwkv": {
      "id": "integrations/rwkv",
      "title": "RWKV-4",
      "description": "This page covers how to use the RWKV-4 wrapper within LangChain."
    },
    "integrations/sagemaker_endpoint": {
      "id": "integrations/sagemaker_endpoint",
      "title": "SageMaker Endpoint",
      "description": "Amazon SageMaker is a system that can build, train, and deploy machine learning (ML) models with fully managed infrastructure, tools, and workflows."
    },
    "integrations/searx": {
      "id": "integrations/searx",
      "title": "SearxNG Search API",
      "description": "This page covers how to use the SearxNG search API within LangChain."
    },
    "integrations/serpapi": {
      "id": "integrations/serpapi",
      "title": "SerpAPI",
      "description": "This page covers how to use the SerpAPI search APIs within LangChain."
    },
    "integrations/sklearn": {
      "id": "integrations/sklearn",
      "title": "scikit-learn",
      "description": "This page covers how to use the scikit-learn package within LangChain."
    },
    "integrations/slack": {
      "id": "integrations/slack",
      "title": "Slack",
      "description": "Slack is an instant messaging program."
    },
    "integrations/spacy": {
      "id": "integrations/spacy",
      "title": "spaCy",
      "description": "spaCy is an open-source software library for advanced natural language processing, written in the programming languages Python and Cython."
    },
    "integrations/spreedly": {
      "id": "integrations/spreedly",
      "title": "Spreedly",
      "description": "Spreedly is a service that allows you to securely store credit cards and use them to transact against any number of payment gateways and third party APIs. It does this by simultaneously providing a card tokenization/vault service as well as a gateway and receiver integration service. Payment methods tokenized by Spreedly are stored at Spreedly, allowing you to independently store a card and then pass that card to different end points based on your business requirements."
    },
    "integrations/stochasticai": {
      "id": "integrations/stochasticai",
      "title": "StochasticAI",
      "description": "This page covers how to use the StochasticAI ecosystem within LangChain."
    },
    "integrations/stripe": {
      "id": "integrations/stripe",
      "title": "Stripe",
      "description": "Stripe is an Irish-American financial services and software as a service (SaaS) company. It offers payment-processing software and application programming interfaces for e-commerce websites and mobile applications."
    },
    "integrations/tair": {
      "id": "integrations/tair",
      "title": "Tair",
      "description": "This page covers how to use the Tair ecosystem within LangChain."
    },
    "integrations/telegram": {
      "id": "integrations/telegram",
      "title": "Telegram",
      "description": "Telegram Messenger is a globally accessible freemium, cross-platform, encrypted, cloud-based and centralized instant messaging service. The application also provides optional end-to-end encrypted chats and video calling, VoIP, file sharing and several other features."
    },
    "integrations/tomarkdown": {
      "id": "integrations/tomarkdown",
      "title": "2Markdown",
      "description": "2markdown service transforms website content into structured markdown files."
    },
    "integrations/trello": {
      "id": "integrations/trello",
      "title": "Trello",
      "description": "Trello is a web-based project management and collaboration tool that allows individuals and teams to organize and track their tasks and projects. It provides a visual interface known as a \"board\" where users can create lists and cards to represent their tasks and activities."
    },
    "integrations/twitter": {
      "id": "integrations/twitter",
      "title": "Twitter",
      "description": "Twitter is an online social media and social networking service."
    },
    "integrations/unstructured": {
      "id": "integrations/unstructured",
      "title": "Unstructured",
      "description": "The unstructured package from"
    },
    "integrations/vectara": {
      "id": "integrations/vectara",
      "title": "Vectara",
      "description": "What is Vectara?"
    },
    "integrations/vespa": {
      "id": "integrations/vespa",
      "title": "Vespa",
      "description": "Vespa is a fully featured search engine and vector database."
    },
    "integrations/weather": {
      "id": "integrations/weather",
      "title": "Weather",
      "description": "OpenWeatherMap is an open source weather service provider."
    },
    "integrations/weaviate": {
      "id": "integrations/weaviate",
      "title": "Weaviate",
      "description": "This page covers how to use the Weaviate ecosystem within LangChain."
    },
    "integrations/whatsapp": {
      "id": "integrations/whatsapp",
      "title": "WhatsApp",
      "description": "WhatsApp (also called WhatsApp Messenger) is a freeware, cross-platform, centralized instant messaging (IM) and voice-over-IP (VoIP) service. It allows users to send text and voice messages, make voice and video calls, and share images, documents, user locations, and other content."
    },
    "integrations/wikipedia": {
      "id": "integrations/wikipedia",
      "title": "Wikipedia",
      "description": "Wikipedia is a multilingual free online encyclopedia written and maintained by a community of volunteers, known as Wikipedians, through open collaboration and using a wiki-based editing system called MediaWiki. Wikipedia is the largest and most-read reference work in history."
    },
    "integrations/wolfram_alpha": {
      "id": "integrations/wolfram_alpha",
      "title": "Wolfram Alpha",
      "description": "WolframAlpha is an answer engine developed by Wolfram Research."
    },
    "integrations/writer": {
      "id": "integrations/writer",
      "title": "Writer",
      "description": "This page covers how to use the Writer ecosystem within LangChain."
    },
    "integrations/yeagerai": {
      "id": "integrations/yeagerai",
      "title": "Yeager.ai",
      "description": "This page covers how to use Yeager.ai to generate LangChain tools and agents."
    },
    "integrations/youtube": {
      "id": "integrations/youtube",
      "title": "YouTube",
      "description": "YouTube is an online video sharing and social media platform created by Google."
    },
    "integrations/zep": {
      "id": "integrations/zep",
      "title": "Zep",
      "description": "Zep - A long-term memory store for LLM applications."
    },
    "integrations/zilliz": {
      "id": "integrations/zilliz",
      "title": "Zilliz",
      "description": "Zilliz Cloud is a fully managed service on cloud for LF AI MilvusÂ®,"
    },
    "modules/agents/agents/agent_types": {
      "id": "modules/agents/agents/agent_types",
      "title": "Agent Types",
      "description": "Agents use an LLM to determine which actions to take and in what order.",
      "sidebar": "sidebar"
    },
    "modules/agents/tools/getting_started": {
      "id": "modules/agents/tools/getting_started",
      "title": "Getting Started",
      "description": "Tools are functions that agents can use to interact with the world.",
      "sidebar": "sidebar"
    },
    "modules/data_io": {
      "id": "modules/data_io",
      "title": "Data I/O",
      "description": "Many LLM applications require user-specific data that is not part of the model's training set. LangChain gives you the",
      "sidebar": "sidebar"
    },
    "modules/model_io": {
      "id": "modules/model_io",
      "title": "Model I/O",
      "description": "The core element of any language model application is...the model. LangChain gives you the building blocks to interface with any language model.",
      "sidebar": "sidebar"
    },
    "modules/model_io/prompts/example_selectors/examples/custom_example_selector": {
      "id": "modules/model_io/prompts/example_selectors/examples/custom_example_selector",
      "title": "How to create a custom example selector",
      "description": "In this tutorial, we'll create a custom example selector that selects every alternate example from a given list of examples.",
      "sidebar": "sidebar"
    },
    "modules/model_io/prompts/prompt_templates/getting_started": {
      "id": "modules/model_io/prompts/prompt_templates/getting_started",
      "title": "Getting Started",
      "description": "In this tutorial, we will learn about:",
      "sidebar": "sidebar"
    },
    "templates/integration": {
      "id": "templates/integration",
      "title": "integration",
      "description": "[comment:"
    },
    "tracing/hosted_installation": {
      "id": "tracing/hosted_installation",
      "title": "Cloud Hosted Setup",
      "description": "We offer a hosted version of tracing at langchainplus.vercel.app. You can use this to view traces from your run without having to run the server locally."
    },
    "tracing/local_installation": {
      "id": "tracing/local_installation",
      "title": "Locally Hosted Setup",
      "description": "This page contains instructions for installing and then setting up the environment to use the locally hosted version of tracing."
    },
    "use_cases/agent_simulations": {
      "id": "use_cases/agent_simulations",
      "title": "Agent Simulations",
      "description": "Agent simulations involve interacting one of more agents with each other.",
      "sidebar": "sidebar"
    },
    "use_cases/apis": {
      "id": "use_cases/apis",
      "title": "Interacting with APIs",
      "description": "Conceptual Guide",
      "sidebar": "sidebar"
    },
    "use_cases/autonomous_agents": {
      "id": "use_cases/autonomous_agents",
      "title": "Autonomous Agents",
      "description": "Autonomous Agents are agents that designed to be more long running.",
      "sidebar": "sidebar"
    },
    "use_cases/chatbots": {
      "id": "use_cases/chatbots",
      "title": "Chatbots",
      "description": "Conceptual Guide",
      "sidebar": "sidebar"
    },
    "use_cases/code": {
      "id": "use_cases/code",
      "title": "Code Understanding",
      "description": "Overview",
      "sidebar": "sidebar"
    },
    "use_cases/extraction": {
      "id": "use_cases/extraction",
      "title": "Extraction",
      "description": "Conceptual Guide",
      "sidebar": "sidebar"
    },
    "use_cases/personal_assistants": {
      "id": "use_cases/personal_assistants",
      "title": "Agents",
      "description": "Conceptual Guide",
      "sidebar": "sidebar"
    },
    "use_cases/question_answering": {
      "id": "use_cases/question_answering",
      "title": "Question Answering over Docs",
      "description": "Conceptual Guide",
      "sidebar": "sidebar"
    },
    "use_cases/summarization": {
      "id": "use_cases/summarization",
      "title": "Summarization",
      "description": "Conceptual Guide",
      "sidebar": "sidebar"
    },
    "use_cases/tabular": {
      "id": "use_cases/tabular",
      "title": "Querying Tabular Data",
      "description": "Conceptual Guide",
      "sidebar": "sidebar"
    }
  }
}